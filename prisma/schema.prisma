// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User_Role {
   id      Int      @id @default(autoincrement())
   name    String   @unique
   users   User[]
}

model User {
  id      Int      @id @default(autoincrement())
  roleId  Int
  role    User_Role @relation(fields: [roleId], references: [id])
  name    String?  @db.VarChar(255)
  profilePhoto String? @db.VarChar(255)
  email   String   @unique @db.VarChar(255)
  password String  @db.VarChar(255)
  createdAt DateTime @default(now())
  posts Post[]
  likes Likes[]
  comments Comments[]
}

model Post {
  id      Int      @id @default(autoincrement())
  title   String
  content String?
  image    String?   @db.VarChar(255)
  published Boolean @default(false)
  likesCount Int @default(0)
  commentsCount Int @default(0)
  categories PostCategories[]
  author   User @relation(fields: [authorId], references: [id])
  authorId Int
  likes Likes[]
  comments Comments[]
}

model Category {
  id      Int      @id @default(autoincrement())
  name String
  posts PostCategories[]
}

model PostCategories {
  post Post @relation(fields: [postId], references: [id])
  postId Int
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  createdAt DateTime @default(now())
  assignedBy String

  @@id([postId, categoryId])
}

model Likes {
  post Post @relation(fields: [postId], references: [id])
  postId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  likedAt DateTime @default(now())

  @@id([postId, userId])
}

model Comments {
  post Post @relation(fields: [postId], references: [id])
  postId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  content String?
  commentedAt DateTime @default(now())

  @@id([postId, userId])
}
